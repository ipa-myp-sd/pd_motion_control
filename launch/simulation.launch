<?xml version="1.0"?>
<launch>

    <!-- Debug Info -->
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
    <arg name="robot" default="lwa4p_extended"/>
    <arg name="robot_env" default="empty"/>
    <arg name="enable_gazebo_gui" default="false"/>
    <arg name="joint_state_gui" default="true"/>
    <arg name="component_name" value="arm"/>
    <arg name="ipa_sim" default="true"/>
    <arg name="paused" default="false"/>
    <arg name="sim" default="true"/>
    <arg name="can_device" default="can3"/>
    <arg name="interval_ms" default="10"/>
    <arg name="use_external_sync" default="false"/>
    <arg name="start_external_sync" default="$(arg use_external_sync)"/>
    <arg name="pkg_hardware_config" default="$(find cob_hardware_config)"/>

    <group ns="$(arg component_name)">

        # load Cartesian controller config
        <rosparam command="load" file="$(arg pkg_hardware_config)/robots/$(arg robot)/config/$(arg component_name)_cartesian_controller.yaml"/>
        <rosparam command="load" file="$(arg pkg_hardware_config)/robots/$(arg robot)/config/$(arg component_name)_self_collision.yaml"/>
        <rosparam command="load" file="$(find pd_control_common)/config/predictive_config_parameter.yaml"/>

        #Cartesian(twist) controllers
        <!--
        <node pkg="cob_twist_controller" type="cob_twist_controller_node" name="twist_controller" cwd="node" respawn="false" output="screen">
                <remap from="base/odometry" to="/base/odometry_controller/odometry"/>
                <remap from="base/command" to="/base/twist_mux/command_syncmm"/>
        </node>
        <node pkg="frame_tracker" type="frame_tracker_node" name="frame_tracker" cwd="node" respawn="false" output="screen"/>
        <node pkg="cob_frame_tracker" type="interactive_frame_target_node" name="interactive_target" cwd="node" respawn="false" output="screen"/>
        -->
        # frame tracker, interactive frame tracker
        <!--node pkg="cob_frame_tracker" type="cob_frame_tracker_node" name="frame_tracker" cwd="node" respawn="false" output="screen"/>
        <node pkg="cob_frame_tracker" type="interactive_frame_target_node" name="interactive_target" cwd="node" respawn="false" output="screen"/>

        <node pkg="cob_obstacle_distance" type="cob_obstacle_distance" name="obstacle_distance" cwd="node" respawn="false" output="screen"/-->
        <!--node pkg="pd_control" type="predictive_control_node" name="predictive_control_node" cwd="node" respawn="false" output="screen"/-->
        <node pkg="pd_control_core" type="kinematic_chain_node" name="kinematic_chain_node" cwd="node" respawn="true" output="screen">
		<!--remap from="~base_link" to="/base_link"/-->	
	</node>

        <node pkg="pd_control_core" type="trajectory_generator_node" name="trajectory_generator_node" cwd="node" respawn="true" output="screen">
                <!--remap from="~base_link" to="/base_link"/-->
        </node>

        <node pkg="pd_control_core" type="controller_interface_node" name="controller_interface_node" cwd="node" respawn="true" output="screen">
        </node>

        <!-- launch obstacle ditance calculation node -->
        <!--include file="$(find cob_obstacle_distance_moveit)/launch/obstacle_distance.launch"/-->

        # register external obstacles
        <!--node pkg="pd_control" type="interactive_obstacle_node.py" name="interactive_obstacle_node" cwd="node" respawn="false" output="screen"/-->

        <!--
        <node pkg="cob_cartesian_controller" type="cartesian_controller_node" name="cartesian_controller"  cwd="node" respawn="false" output="screen">
                <param name="target_frame" type="str" value="cartesian_target"/>
        </node>
-->
        <group if="$(arg debug)">
                <node pkg="cob_twist_controller" type="debug_evaluate_jointstates_node" name="debug_evaluate_jointstates_node" cwd="node" respawn="false" output="screen"/>
                <node pkg="cob_twist_controller" type="debug_trajectory_marker_node" name="debug_trajectory_marker_node" cwd="node" respawn="false" output="screen"/>
                <node pkg="cob_obstacle_distance" type="debug_obstacle_distance_node" name="debug_obstacle_distance_node" cwd="node" respawn="false" output="screen"/>
                <node pkg="cob_obstacle_distance" type="test_interactive_obstacle_node.py" name="test_interactive_obstacle_node" cwd="node" respawn="false" output="screen"/>
        </group>

    </group>

    <!-- configured rviz -->
    <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find pd_control_common)/rviz_config/test_description.rviz" /-->


</launch>
